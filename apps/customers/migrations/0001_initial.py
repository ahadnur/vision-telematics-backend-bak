# Generated by Django 5.0.6 on 2025-03-29 04:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('utilities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_ref_number', models.CharField(max_length=100, unique=True)),
                ('actinic_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_numbers', models.CharField(blank=True, max_length=100, null=True)),
                ('multi_site_link', models.CharField(blank=True, max_length=255, null=True)),
                ('has_multi_site_link', models.BooleanField(default=False)),
                ('is_web', models.BooleanField(default=False)),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='companies', to='accounts.company')),
            ],
            options={
                'db_table': 'customers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line_3', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line_4', models.CharField(blank=True, max_length=255, null=True)),
                ('postcode', models.CharField(max_length=20)),
                ('address_type', models.CharField(choices=[('INSTALL', 'Install'), ('DELIVERY', 'Delivery'), ('INVOICE', 'Invoice')], max_length=50)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='customers.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('service_call_rod', models.CharField(blank=True, max_length=100, null=True)),
                ('service_call_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('original_complaint_date_time', models.DateTimeField(blank=True, null=True)),
                ('complaint_detail', models.TextField(blank=True, null=True)),
                ('complaint_resolution', models.TextField(blank=True, null=True)),
                ('resolution_date', models.DateField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='customers.customer')),
                ('who_took_complaint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complaints_taken', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInstallation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('kit_installed', models.CharField(blank=True, max_length=100, null=True)),
                ('job_required', models.CharField(blank=True, max_length=255, null=True)),
                ('booking_notes', models.TextField(blank=True, null=True)),
                ('date_of_install', models.DateField(blank=True, null=True)),
                ('time_of_install', models.TimeField(blank=True, null=True)),
                ('install_notes', models.TextField(blank=True, null=True)),
                ('preferred_install_date', models.DateField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='installations', to='customers.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerKit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('kit_supplied', models.BooleanField(default=False)),
                ('po_number_kit', models.CharField(blank=True, max_length=100, null=True)),
                ('kit_order_date', models.DateField(blank=True, null=True)),
                ('kit_delivered_to', models.CharField(blank=True, max_length=255, null=True)),
                ('kit_delivery_date', models.DateField(blank=True, null=True)),
                ('kit_confirm_delivery', models.DateField(blank=True, null=True)),
                ('delivery_notes', models.CharField(blank=True, max_length=255, null=True)),
                ('courier_tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_received', models.DateTimeField(blank=True, null=True)),
                ('invoice_paid', models.DateTimeField(blank=True, null=True)),
                ('invoice_note', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kits', to='customers.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerMiscellaneous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('is_purchasing_complete', models.BooleanField(default=False)),
                ('purchasing_complete_time', models.DateTimeField(blank=True, null=True)),
                ('customer_confirmed_time', models.DateTimeField(blank=True, null=True)),
                ('acc_inv_raised_date', models.DateField(blank=True, null=True)),
                ('acc_inv_paid', models.CharField(blank=True, max_length=255, null=True)),
                ('is_on_hold', models.BooleanField(default=False)),
                ('record_edited_at', models.DateTimeField(blank=True, null=True)),
                ('service_reference_org', models.CharField(blank=True, max_length=100, null=True)),
                ('call_back_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_to_be_returned', models.CharField(blank=True, max_length=100, null=True)),
                ('service_call_enabled', models.BooleanField(default=False)),
                ('call_back_date', models.DateField(blank=True, null=True)),
                ('instlev', models.CharField(blank=True, max_length=100, null=True)),
                ('is_dispatch_printed', models.BooleanField(default=False)),
                ('eng_inv_no', models.CharField(blank=True, max_length=100, null=True)),
                ('is_hot', models.BooleanField(default=False)),
                ('jcd', models.DateField(blank=True, null=True)),
                ('sat', models.BooleanField(default=False)),
                ('late', models.IntegerField(blank=True, null=True)),
                ('consignment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_dispute_eng_inv', models.BooleanField(default=False)),
                ('dispute_eng_reason', models.CharField(blank=True, max_length=100, null=True)),
                ('back_order', models.BooleanField(default=False)),
                ('existing_kit', models.CharField(blank=True, max_length=255, null=True)),
                ('package', models.CharField(blank=True, max_length=100, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miscellaneous', to='customers.customer')),
                ('customer_confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_customers', to=settings.AUTH_USER_MODEL)),
                ('dispute_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sold_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_notified', models.BooleanField(default=False)),
                ('customer_notified_time', models.DateTimeField(blank=True, null=True)),
                ('email_request_confirmed', models.BooleanField(default=False)),
                ('request_time_stamp', models.DateTimeField(blank=True, null=True)),
                ('courtesy_call', models.BooleanField(default=False)),
                ('courtesy_notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='customers.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('registration_number', models.CharField(max_length=20)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='customers.customer')),
                ('vehicle_make', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='make', to='utilities.vehiclemake')),
                ('vehicle_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='model', to='utilities.vehiclemodel')),
                ('vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='type', to='utilities.vehicletype')),
            ],
            options={
                'db_table': 'customer_vehicles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('invoice_number', models.CharField(max_length=100)),
                ('paid', models.BooleanField(default=False)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('paid', 'Paid'), ('overdue', 'Overdue')], max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.account')),
                ('customer', models.ManyToManyField(related_name='customer_invoices', to='customers.customer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('credit_note_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_address', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('stock_supplied_to', models.CharField(blank=True, max_length=100, null=True)),
                ('stock_returned', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('authorised', models.BooleanField(default=False)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.account')),
                ('original_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceServiceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('status_code', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=2000, null=True)),
                ('request_data', models.TextField(blank=True, null=True)),
                ('response_data', models.TextField(blank=True, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('request_type', models.CharField(choices=[('create_invoice', 'Create Invoice'), ('create_customer', 'Create Customer'), ('update_customer', 'Update Customer'), ('other', 'Other')], default='create_invoice', max_length=100)),
                ('customer_number', models.CharField(blank=True, max_length=60, null=True)),
                ('account_invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='invoices', to='customers.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='customers_i_invoice_28657c_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['created_at'], name='customers_i_created_4d45d9_idx'),
        ),
    ]
